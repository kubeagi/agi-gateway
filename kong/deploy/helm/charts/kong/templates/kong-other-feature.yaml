---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway-log
  namespace:  {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace:  {{ .Release.Namespace }}
  labels:
    app: redis
data:
  redis.conf: |-
    dir /srv
    port 6379
    bind 0.0.0.0
    appendonly yes
    daemonize no
    #protected-mode no
    requirepass kong
    pidfile /srv/redis-6379.pid
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-redis
  namespace:  {{ .Release.Namespace }}
  labels:
    app: kong-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-redis
  template:
    metadata:
      labels:
        app: kong-redis
    spec:
      serviceAccountName: gateway-log
      containers:
        - name: kong-redis
          image: "{{ .Values.image.registry }}/system_containers/redis:7.0.1"
          command:
            - "sh"
            - "-c"
            - "redis-server /usr/local/redis/redis.conf"
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: 2000m
              memory: 400Mi
            requests:
              cpu: 2000m
              memory: 400Mi
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 300
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath:  /usr/local/redis/redis.conf
              subPath: redis.conf
      volumes:
        - name: config
          configMap:
            name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tamp/system: "true"
  name: kong-redis
  namespace:  {{ .Release.Namespace }}
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: kong-redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apigateway: kong
    system/appName: default-nginx
  name: default-nginx
  namespace:  {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      apigateway: kong
      system/appName: default-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        apigateway: kong
        system/appName: default-nginx
    spec:
      serviceAccountName: gateway-log
      containers:
        - name: nginx-proxy
          image: "{{ .Values.image.registry }}/system_containers/default-nginx:v1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
              name: proxy
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: default-nginx
  namespace:  {{ .Release.Namespace }}
  labels:
    tamp/system: "true"
    apigateway: kong
    system/appName: default-nginx
spec:
  ports:
    - name: nginx-proxy
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    system/appName: default-nginx
    apigateway: kong
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: ClusterIP
---
